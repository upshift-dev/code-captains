name: Code Captains

on:
    workflow_call:
        secrets:
            token:
                description: |
                    GitHub token used to fetch PR approvers and team members from Github's API.
                    Required if using team-based captains.
                required: false

jobs:
    code-captains:
        permissions:
            contents: read # For code-captains.yml files
            pull-requests: write # Read PR approvers and comment on PRs

        runs-on: ubuntu-latest

        steps:
            - name: Checkout all code-captains.yml files on target branch
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.base_ref }}
                  sparse-checkout: code-captains.yml
                  sparse-checkout-cone-mode: false

            - name: Determine changed files
              id: changed-files
              uses: tj-actions/changed-files@v45
              with:
                  escape_json: false
                  json: true

            - name: Determine Code Captains
              id: code-captains
              uses: upshift-dev/code-captains@1.0.3
              with:
                  changed-files: ${{ steps.changed-files.outputs.all_changed_files }}
                  token: ${{ secrets.token || github.token }}

            - name: Format comment contents
              id: code-captains-comment-contents
              run: |
                  if echo '${{ steps.code-captains.outputs.code-captains-result }}' | jq -e '.metPolicies | length > 0'; then
                    {
                      echo "comment<<EOF"
                      echo "Code Captains are required on this PR:"
                      echo '${{ steps.code-captains.outputs.code-captains-result }}' | jq -r '.metPolicies[] |
                        " - Policy: \(.policyFilePath) \((if .isPolicySatisfied then ":white_check_mark:" else ":x:" end))\n   Captains:\n     - \(.captains | map("`\(.)`") | join("\n     - "))" '
                      echo EOF
                    } >> "$GITHUB_OUTPUT"
                  else
                    echo "comment=No Code Captains are required on this PR." >> "$GITHUB_OUTPUT"
                  fi

            - name: Find Code Captains comment
              uses: peter-evans/find-comment@v3
              id: find-comment
              with:
                  issue-number: ${{ github.event.pull_request.number }}
                  comment-author: "github-actions[bot]"
                  body-includes: Code Captains

            - name: Record Code Captains comment
              uses: peter-evans/create-or-update-comment@v4
              with:
                  comment-id: ${{ steps.find-comment.outputs.comment-id }}
                  issue-number: ${{ github.event.pull_request.number }}
                  body: ${{ steps.code-captains-comment-contents.outputs.comment }}
                  edit-mode: replace

            - name: Check if Code Captains policies are satisfied
              run: |
                  if echo '${{ steps.code-captains.outputs.code-captains-result }}' | jq -e '.areAllPoliciesSatisfied == true'; then
                      echo "All policies are satisfied."
                  else
                      echo "One or more Code Captains policies are not satisfied."
                      exit 1  # Fail the action
                  fi
